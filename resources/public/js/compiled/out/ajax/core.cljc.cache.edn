;; Analyzed by ClojureScript 1.8.51
{:name ajax.core, :doc "This is the documented API for cljs-ajax. The only functions not\n   exposed here that are documented are the deprecated features.", :excludes #{}, :use-macros nil, :require-macros {m ajax.macros, ajax.macros ajax.macros}, :uses nil, :requires {json ajax.json, ajax.formats ajax.formats, pr ajax.protocols, i ajax.interceptors, ajax.xml-http-request ajax.xml-http-request, u ajax.util, ajax.transit ajax.transit, ajax.json ajax.json, ajax.url ajax.url, ajax.interceptors ajax.interceptors, ajax.ring ajax.ring, ring ajax.ring, ajax.easy ajax.easy, easy ajax.easy, simple ajax.simple, ajax.simple ajax.simple, ajax.protocols ajax.protocols, ajax.util ajax.util, transit ajax.transit, str clojure.string, clojure.string clojure.string, ajax.xhrio ajax.xhrio, url ajax.url, f ajax.formats}, :imports nil, :defs {PUT {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 75, :column 13, :end-line 75, :end-column 16, :arglists (quote ([uri & opts])), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists ([uri & opts]), :arglists-meta (nil)}}, :name ajax.core/PUT, :variadic true, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists ([uri & opts]), :arglists-meta (nil)}, :method-params [(uri opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists ([uri & opts]), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request"}, POST {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 74, :column 13, :end-line 74, :end-column 17, :arglists (quote ([uri & opts])), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists ([uri & opts]), :arglists-meta (nil)}}, :name ajax.core/POST, :variadic true, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists ([uri & opts]), :arglists-meta (nil)}, :method-params [(uri opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists ([uri & opts]), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request"}, PURGE {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 80, :column 13, :end-line 80, :end-column 18, :arglists (quote ([uri & opts])), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists ([uri & opts]), :arglists-meta (nil)}}, :name ajax.core/PURGE, :variadic true, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists ([uri & opts]), :arglists-meta (nil)}, :method-params [(uri opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 1, :fn-var true, :arglists ([uri & opts]), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request"}, transit-request-format {:name ajax.core/transit-request-format, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 42, :column 1, :end-line 42, :end-column 28, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 42, :column 6, :end-line 42, :end-column 28}}, json-request-format {:name ajax.core/json-request-format, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 39, :column 1, :end-line 39, :end-column 25, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 39, :column 6, :end-line 39, :end-column 25}}, raw-response-format {:name ajax.core/raw-response-format, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 52, :column 1, :end-line 52, :end-column 25, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 52, :column 6, :end-line 52, :end-column 25}}, to-interceptor {:name ajax.core/to-interceptor, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 31, :column 1, :end-line 31, :end-column 20, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 31, :column 6, :end-line 31, :end-column 20}}, default-formats {:name ajax.core/default-formats, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 62, :column 1, :end-line 62, :end-column 21, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 62, :column 6, :end-line 62, :end-column 21}}, text-response-format {:name ajax.core/text-response-format, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 50, :column 1, :end-line 50, :end-column 26, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 50, :column 6, :end-line 50, :end-column 26}}, DELETE {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 76, :column 13, :end-line 76, :end-column 19, :arglists (quote ([uri & opts])), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists ([uri & opts]), :arglists-meta (nil)}}, :name ajax.core/DELETE, :variadic true, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists ([uri & opts]), :arglists-meta (nil)}, :method-params [(uri opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists ([uri & opts]), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request"}, json-response-format {:name ajax.core/json-response-format, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 40, :column 1, :end-line 40, :end-column 26, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 40, :column 6, :end-line 40, :end-column 26}}, abort {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 33, :column 7, :end-line 33, :end-column 12, :arglists (quote ([this]))}, :name ajax.core/abort, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this]))}, ajax-request {:name ajax.core/ajax-request, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 58, :column 1, :end-line 58, :end-column 18, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 58, :column 6, :end-line 58, :end-column 18}}, default-interceptors {:name ajax.core/default-interceptors, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 56, :column 1, :end-line 56, :end-column 26, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 56, :column 6, :end-line 56, :end-column 26}}, url-request-format {:name ajax.core/url-request-format, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 47, :column 1, :end-line 47, :end-column 24, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 47, :column 6, :end-line 47, :end-column 24}}, GET {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 72, :column 13, :end-line 72, :end-column 16, :arglists (quote ([uri & opts])), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists ([uri & opts]), :arglists-meta (nil)}}, :name ajax.core/GET, :variadic true, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists ([uri & opts]), :arglists-meta (nil)}, :method-params [(uri opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists ([uri & opts]), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request"}, HEAD {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 73, :column 13, :end-line 73, :end-column 17, :arglists (quote ([uri & opts])), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists ([uri & opts]), :arglists-meta (nil)}}, :name ajax.core/HEAD, :variadic true, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists ([uri & opts]), :arglists-meta (nil)}, :method-params [(uri opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists ([uri & opts]), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request"}, ring-response-format {:name ajax.core/ring-response-format, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 45, :column 1, :end-line 45, :end-column 26, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 45, :column 6, :end-line 45, :end-column 26}}, TRACE {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 78, :column 13, :end-line 78, :end-column 18, :arglists (quote ([uri & opts])), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists ([uri & opts]), :arglists-meta (nil)}}, :name ajax.core/TRACE, :variadic true, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists ([uri & opts]), :arglists-meta (nil)}, :method-params [(uri opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists ([uri & opts]), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request"}, transit-response-format {:name ajax.core/transit-response-format, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 43, :column 1, :end-line 43, :end-column 29, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 43, :column 6, :end-line 43, :end-column 29}}, detect-response-format {:name ajax.core/detect-response-format, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 70, :column 1, :end-line 70, :end-column 28, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 70, :column 6, :end-line 70, :end-column 28}}, text-request-format {:name ajax.core/text-request-format, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 49, :column 1, :end-line 49, :end-column 25, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 49, :column 6, :end-line 49, :end-column 25}}, PATCH {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 79, :column 13, :end-line 79, :end-column 18, :arglists (quote ([uri & opts])), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists ([uri & opts]), :arglists-meta (nil)}}, :name ajax.core/PATCH, :variadic true, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists ([uri & opts]), :arglists-meta (nil)}, :method-params [(uri opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists ([uri & opts]), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request"}, OPTIONS {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :line 77, :column 13, :end-line 77, :end-column 20, :arglists (quote ([uri & opts])), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists ([uri & opts]), :arglists-meta (nil)}}, :name ajax.core/OPTIONS, :variadic true, :file "resources\\public\\js\\compiled\\out\\ajax\\core.cljc", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(uri opts)], :arglists ([uri & opts]), :arglists-meta (nil)}, :method-params [(uri opts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists ([uri & opts]), :doc "accepts the URI and an optional map of options, options include:\n        :handler - the handler function for successful operation\n                   should accept a single parameter which is the\n                   deserialized response\n        :progress-handler - the handler function for progress events.\n                            this handler is only available when using the goog.net.XhrIo API\n        :error-handler - the handler function for errors, should accept a\n                         map with keys :status and :status-text\n        :format - the format for the request\n        :response-format - the format for the response\n        :params - a map of parameters that will be sent with the request"}}}