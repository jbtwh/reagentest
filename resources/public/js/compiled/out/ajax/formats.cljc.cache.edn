;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name ajax.formats, :imports nil, :requires {i ajax.interceptors, ajax.interceptors ajax.interceptors, u ajax.util, ajax.util ajax.util, pr ajax.protocols, ajax.protocols ajax.protocols}, :uses nil, :defs {detect-content-type {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :line 81, :column 17, :end-line 81, :end-column 36, :arglists (quote ([content-type request format-entry] [content-type request] [content-type])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([content-type request format-entry] [content-type request] [content-type]), :arglists ([content-type request format-entry] [content-type request] [content-type]), :arglists-meta (nil nil nil)}}, :name ajax.formats/detect-content-type, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :end-column 36, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([content-type request format-entry] [content-type request] [content-type]), :arglists ([content-type request format-entry] [content-type request] [content-type]), :arglists-meta (nil nil nil)}, :method-params ([content-type request format-entry] [content-type request] [content-type]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 3, :fn-var true, :arglists ([content-type request format-entry] [content-type request] [content-type])}, accept-header {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :line 99, :column 7, :end-line 99, :end-column 20, :arglists (quote ([{:keys [response-format], :as request}]))}, :name ajax.formats/accept-header, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :end-column 20, :method-params ([p__8249]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [response-format], :as request}]))}, raw-response-format {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :line 12, :column 7, :end-line 12, :end-column 26, :arglists (quote ([] [_])), :doc "This will literally return whatever the underlying implementation\n   considers has been sent. Obviously, this is highly implementation\n   dependent, gives different results depending on your platform but\n   is nonetheless really rather useful.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [_]), :arglists ([] [_]), :arglists-meta (nil nil)}}, :name ajax.formats/raw-response-format, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :end-column 26, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [_]), :arglists ([] [_]), :arglists-meta (nil nil)}, :method-params ([] [_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists ([] [_]), :doc "This will literally return whatever the underlying implementation\n   considers has been sent. Obviously, this is highly implementation\n   dependent, gives different results depending on your platform but\n   is nonetheless really rather useful."}, get-default-format {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :line 86, :column 7, :end-line 86, :end-column 25, :arglists (quote ([response {:keys [response-format], :as request}]))}, :name ajax.formats/get-default-format, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :end-column 25, :method-params ([response p__8237]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([response {:keys [response-format], :as request}]))}, detect-response-format-read {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :line 94, :column 17, :end-line 94, :end-column 44, :arglists (quote ([request response] [request])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([request response] [request]), :arglists ([request response] [request]), :arglists-meta (nil nil)}}, :name ajax.formats/detect-response-format-read, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :end-column 44, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([request response] [request]), :arglists ([request response] [request]), :arglists-meta (nil nil)}, :method-params ([request response] [request]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 2, :fn-var true, :arglists ([request response] [request])}, get-accept-entries {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :line 68, :column 17, :end-line 68, :end-column 35, :arglists (quote ([request format-entry] [request])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([request format-entry] [request]), :arglists ([request format-entry] [request]), :arglists-meta (nil nil)}}, :name ajax.formats/get-accept-entries, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :end-column 35, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([request format-entry] [request]), :arglists ([request format-entry] [request]), :arglists-meta (nil nil)}, :method-params ([request format-entry] [request]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists ([request format-entry] [request])}, text-response-format {:name ajax.formats/text-response-format, :file "resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :line 46, :column 5, :end-line 46, :end-column 30, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :line 46, :column 10, :end-line 46, :end-column 30}}, content-type-matches {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :line 76, :column 17, :end-line 76, :end-column 37, :arglists (quote ([content-type accept] [content-type])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([content-type accept] [content-type]), :arglists ([content-type accept] [content-type]), :arglists-meta (nil nil)}}, :name ajax.formats/content-type-matches, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :end-column 37, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([content-type accept] [content-type]), :arglists ([content-type accept] [content-type]), :arglists-meta (nil nil)}, :method-params ([content-type accept] [content-type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists ([content-type accept] [content-type])}, get-format {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :line 50, :column 17, :end-line 50, :end-column 27, :arglists (quote ([request format-entry] [request])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([request format-entry] [request]), :arglists ([request format-entry] [request]), :arglists-meta (nil nil)}}, :name ajax.formats/get-format, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([request format-entry] [request]), :arglists ([request format-entry] [request]), :arglists-meta (nil nil)}, :method-params ([request format-entry] [request]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists ([request format-entry] [request])}, detect-response-format {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :line 104, :column 7, :end-line 104, :end-column 29, :arglists (quote ([opts]))}, :name ajax.formats/detect-response-format, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :end-column 29, :method-params ([opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opts]))}, text-request-format {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :line 23, :column 7, :end-line 23, :end-column 26, :arglists (quote ([]))}, :name ajax.formats/text-request-format, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\formats.cljc", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {p poppea, poppea poppea}, :cljs.analyzer/constants {:seen #{:description :format :read :else :response-format :write :content-type}, :order [:read :description :content-type :write :else :response-format :format]}, :doc "This file contains the base formats: raw, text and detect.\n     url, json and transit are found in their own files."}