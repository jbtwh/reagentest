;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name ajax.easy, :imports nil, :requires {t ajax.transit, json ajax.json, ajax.formats ajax.formats, ajax.transit ajax.transit, ajax.json ajax.json, ajax.url ajax.url, ajax.ring ajax.ring, ring ajax.ring, simple ajax.simple, ajax.simple ajax.simple, url ajax.url, f ajax.formats}, :uses nil, :defs {default-handler {:name ajax.easy/default-handler, :file "resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :line 68, :column 1, :end-line 68, :end-column 21, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :line 68, :column 6, :end-line 68, :end-column 21}, :doc "This gets called if you forget to attach a handler to an easy\n  API function."}, print-response {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :line 65, :column 7, :end-line 65, :end-column 21, :arglists (quote ([response]))}, :name ajax.easy/print-response, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :end-column 21, :method-params ([response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([response]))}, print-error-response {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :line 73, :column 7, :end-line 73, :end-column 27, :arglists (quote ([response]))}, :name ajax.easy/print-error-response, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :end-column 27, :method-params ([response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([response]))}, default-formats {:name ajax.easy/default-formats, :file "resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :line 9, :column 1, :end-line 9, :end-column 21, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :line 9, :column 6, :end-line 9, :end-column 21}}, keyword-response-format-element {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :line 37, :column 8, :end-line 37, :end-column 39, :private true, :arglists (quote ([format format-params]))}, :private true, :name ajax.easy/keyword-response-format-element, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :end-column 39, :method-params ([format format-params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([format format-params]))}, easy-ajax-request {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :line 111, :column 7, :end-line 111, :end-column 24, :arglists (quote ([uri method opts]))}, :name ajax.easy/easy-ajax-request, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :end-column 24, :method-params ([uri method opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 3, :fn-var true, :arglists (quote ([uri method opts]))}, transform-handler {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :line 86, :column 7, :end-line 86, :end-column 24, :arglists (quote ([{:keys [handler error-handler finally]}])), :doc "Converts easy API handlers to a `ajax-request` handler"}, :name ajax.easy/transform-handler, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :end-column 24, :method-params ([p__8530]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [handler error-handler finally]}])), :doc "Converts easy API handlers to a `ajax-request` handler"}, transform-opts {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :line 96, :column 7, :end-line 96, :end-column 21, :arglists (quote ([{:keys [method format response-format params body], :as opts}]))}, :name ajax.easy/transform-opts, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :end-column 21, :method-params ([p__8541]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [method format response-format params body], :as opts}]))}, keyword-response-format {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :line 54, :column 7, :end-line 54, :end-column 30, :arglists (quote ([format format-params]))}, :name ajax.easy/keyword-response-format, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :end-column 30, :method-params ([format format-params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([format format-params]))}, default-error-handler {:name ajax.easy/default-error-handler, :file "resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :line 79, :column 1, :end-line 79, :end-column 27, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :line 79, :column 6, :end-line 79, :end-column 27}, :doc "This will be called when errors occur if you don't supply\n   an error handler to the easy API functions. If you don't\n   want it writing errors to the console (or worse, flashing up\n   alerts), make sure you always handle errors."}, detect-response-format {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :line 18, :column 7, :end-line 18, :end-column 29, :arglists (quote ([] [opts])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}}, :name ajax.easy/detect-response-format, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :end-column 29, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}, :method-params ([] [opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists ([] [opts])}, keyword-request-format {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :line 22, :column 7, :end-line 22, :end-column 29, :arglists (quote ([format format-params]))}, :name ajax.easy/keyword-request-format, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\easy.cljc", :end-column 29, :method-params ([format format-params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([format format-params]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:description :finally :format :read :else :method :response-format :params :error-handler :write :uri :body :handler}, :order [:response-format :write :else :read :description :handler :error-handler :finally :method :format :params :body :uri]}, :doc nil}