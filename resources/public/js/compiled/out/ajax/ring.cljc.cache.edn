;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name ajax.ring, :imports nil, :requires {ajax.interceptors ajax.interceptors, ajax.protocols ajax.protocols, f ajax.formats, ajax.formats ajax.formats}, :uses {-status ajax.protocols, map->ResponseFormat ajax.interceptors, -get-all-headers ajax.protocols, -body ajax.protocols}, :defs {make-ring-read {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\ring.cljc", :line 6, :column 7, :end-line 6, :end-column 21, :arglists (quote ([body-read]))}, :name ajax.ring/make-ring-read, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\ring.cljc", :end-column 21, :method-params ([body-read]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([body-read]))}, ring-response-format {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\ring.cljc", :line 12, :column 7, :end-line 12, :end-column 27, :arglists (quote ([] [{{:keys [read description content-type]} :format}])), :doc "Returns a Ring-compatible response map.\n\n   Optionally can be passed a :format option. This should be another\n   response-format map. If format is provided it will be used to\n   specify the content-type, and the read method will be used to\n   populate the :body key in the response map.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [{{:keys [read description content-type]} :format}]), :arglists ([] [{{:keys [read description content-type]} :format}]), :arglists-meta (nil nil)}}, :name ajax.ring/ring-response-format, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\ring.cljc", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [{{:keys [read description content-type]} :format}]), :arglists ([] [{{:keys [read description content-type]} :format}]), :arglists-meta (nil nil)}, :method-params ([] [{{:keys [read description content-type]} :format}]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists ([] [{{:keys [read description content-type]} :format}]), :doc "Returns a Ring-compatible response map.\n\n   Optionally can be passed a :format option. This should be another\n   response-format map. If format is provided it will be used to\n   specify the content-type, and the read method will be used to\n   populate the :body key in the response map."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:description :format :read :headers :status :content-type :body}, :order [:status :headers :body :format :read :description :content-type]}, :doc nil}