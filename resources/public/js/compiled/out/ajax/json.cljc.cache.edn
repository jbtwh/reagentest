;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name ajax.json, :imports nil, :requires {ajax.interceptors ajax.interceptors, ajax.protocols ajax.protocols}, :uses {-status ajax.protocols, -abort ajax.protocols, -status-text ajax.protocols, -get-response-header ajax.protocols, map->ResponseFormat ajax.interceptors, -process-response ajax.protocols, -was-aborted ajax.protocols, -process-request ajax.protocols, -body ajax.protocols, -js-ajax-request ajax.protocols}, :defs {write-json-native {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\json.cljc", :line 20, :column 17, :end-line 20, :end-column 34, :arglists (quote ([data]))}, :name ajax.json/write-json-native, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\json.cljc", :end-column 34, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 11, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, read-json-native {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\json.cljc", :line 27, :column 17, :end-line 27, :end-column 33, :arglists (quote ([raw keywords? text]))}, :name ajax.json/read-json-native, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\json.cljc", :end-column 33, :method-params ([raw keywords? text]), :protocol-impl nil, :arglists-meta (nil nil), :column 11, :line 27, :end-line 27, :max-fixed-arity 3, :fn-var true, :arglists (quote ([raw keywords? text]))}, make-json-request-format {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\json.cljc", :line 33, :column 7, :end-line 33, :end-column 31, :arglists (quote ([write-json]))}, :name ajax.json/make-json-request-format, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\json.cljc", :end-column 31, :method-params ([write-json]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([write-json]))}, strip-prefix {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\json.cljc", :line 48, :column 18, :end-line 48, :end-column 30, :arglists (quote ([prefix text]))}, :name ajax.json/strip-prefix, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\json.cljc", :end-column 30, :method-params ([prefix text]), :protocol-impl nil, :arglists-meta (nil nil), :column 12, :line 48, :end-line 48, :max-fixed-arity 2, :fn-var true, :arglists (quote ([prefix text]))}, make-json-response-format {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\json.cljc", :line 53, :column 7, :end-line 53, :end-column 32, :arglists (quote ([read-json]))}, :name ajax.json/make-json-response-format, :variadic false, :file "resources\\public\\js\\compiled\\out\\ajax\\json.cljc", :end-column 32, :method-params ([read-json]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([read-json]))}, json-response-format {:name ajax.json/json-response-format, :file "resources\\public\\js\\compiled\\out\\ajax\\json.cljc", :line 68, :column 1, :end-line 68, :end-column 26, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\json.cljc", :line 68, :column 6, :end-line 68, :end-column 26}, :doc "Returns a JSON response format using the native JSON \n   implementation. Options include\n   :keywords? Returns the keys as keywords\n   :prefix A prefix that needs to be stripped off.  This is to\n   combat JSON hijacking.  If you're using JSON with GET request,\n   you should think about using this.\n   http://stackoverflow.com/questions/2669690/why-does-google-prepend-while1-to-their-json-responses\n   http://haacked.com/archive/2009/06/24/json-hijacking.aspx"}, json-request-format {:name ajax.json/json-request-format, :file "resources\\public\\js\\compiled\\out\\ajax\\json.cljc", :line 80, :column 1, :end-line 80, :end-column 25, :meta {:file "d:\\workspace\\projects\\reagentest\\resources\\public\\js\\compiled\\out\\ajax\\json.cljc", :line 80, :column 6, :end-line 80, :end-column 25}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:description :keywords? :read :raw :prefix :write :content-type :keywordize-keys}, :order [:keywordize-keys :write :content-type :prefix :keywords? :raw :read :description]}, :doc nil}