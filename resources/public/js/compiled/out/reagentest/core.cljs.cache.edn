;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{update val}, :name reagentest.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, reagent-modals reagent-modals.modals, reagent-modals.modals reagent-modals.modals, ajax.core ajax.core}, :uses {PUT ajax.core, POST ajax.core, json-request-format ajax.core, atom reagent.core, DELETE ajax.core, GET ajax.core}, :defs {employees {:name reagentest.core/employees, :file "src\\cljs\\reagentest\\core.cljs", :line 20, :column 1, :end-line 20, :end-column 15, :meta {:file "d:\\workspace\\projects\\reagentest\\src\\cljs\\reagentest\\core.cljs", :line 20, :column 6, :end-line 20, :end-column 15}}, add {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\src\\cljs\\reagentest\\core.cljs", :line 64, :column 7, :end-line 64, :end-column 10, :arglists (quote ([emp]))}, :name reagentest.core/add, :variadic false, :file "src\\cljs\\reagentest\\core.cljs", :end-column 10, :method-params ([emp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([emp]))}, main {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\src\\cljs\\reagentest\\core.cljs", :line 127, :column 16, :end-line 127, :end-column 20, :export true, :arglists (quote ([]))}, :name reagentest.core/main, :variadic false, :file "src\\cljs\\reagentest\\core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, atom-input {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\src\\cljs\\reagentest\\core.cljs", :line 14, :column 7, :end-line 14, :end-column 17, :arglists (quote ([value]))}, :name reagentest.core/atom-input, :variadic false, :file "src\\cljs\\reagentest\\core.cljs", :end-column 17, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, get-one {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\src\\cljs\\reagentest\\core.cljs", :line 81, :column 7, :end-line 81, :end-column 14, :arglists (quote ([id callback]))}, :name reagentest.core/get-one, :variadic false, :file "src\\cljs\\reagentest\\core.cljs", :end-column 14, :method-params ([id callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id callback]))}, by-id {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\src\\cljs\\reagentest\\core.cljs", :line 8, :column 7, :end-line 8, :end-column 12, :arglists (quote ([elem-id]))}, :name reagentest.core/by-id, :variadic false, :file "src\\cljs\\reagentest\\core.cljs", :end-column 12, :method-params ([elem-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([elem-id]))}, home {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\src\\cljs\\reagentest\\core.cljs", :line 118, :column 7, :end-line 118, :end-column 11, :arglists (quote ([]))}, :name reagentest.core/home, :variadic false, :file "src\\cljs\\reagentest\\core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, modal-window-button {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\src\\cljs\\reagentest\\core.cljs", :line 88, :column 7, :end-line 88, :end-column 26, :arglists (quote ([btn-title & [emp-id]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(btn-title [emp-id])], :arglists ([btn-title & [emp-id]]), :arglists-meta (nil)}}, :name reagentest.core/modal-window-button, :variadic true, :file "src\\cljs\\reagentest\\core.cljs", :end-column 26, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(btn-title [emp-id])], :arglists ([btn-title & [emp-id]]), :arglists-meta (nil)}, :method-params [(btn-title [emp-id])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists ([btn-title & [emp-id]])}, employees-table {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\src\\cljs\\reagentest\\core.cljs", :line 99, :column 7, :end-line 99, :end-column 22, :arglists (quote ([]))}, :name reagentest.core/employees-table, :variadic false, :file "src\\cljs\\reagentest\\core.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, modaldiv {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\src\\cljs\\reagentest\\core.cljs", :line 31, :column 7, :end-line 31, :end-column 15, :arglists (quote ([save-fn]))}, :name reagentest.core/modaldiv, :variadic false, :file "src\\cljs\\reagentest\\core.cljs", :end-column 15, :method-params ([save-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([save-fn]))}, update {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\src\\cljs\\reagentest\\core.cljs", :line 72, :column 7, :end-line 72, :end-column 13, :arglists (quote ([emp]))}, :name reagentest.core/update, :variadic false, :file "src\\cljs\\reagentest\\core.cljs", :end-column 13, :method-params ([emp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([emp]))}, delete {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\src\\cljs\\reagentest\\core.cljs", :line 57, :column 7, :end-line 57, :end-column 13, :arglists (quote ([id]))}, :name reagentest.core/delete, :variadic false, :file "src\\cljs\\reagentest\\core.cljs", :end-column 13, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, val {:name reagentest.core/val, :file "src\\cljs\\reagentest\\core.cljs", :line 12, :column 1, :end-line 12, :end-column 9, :meta {:file "d:\\workspace\\projects\\reagentest\\src\\cljs\\reagentest\\core.cljs", :line 12, :column 6, :end-line 12, :end-column 9}}, error-handler {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\src\\cljs\\reagentest\\core.cljs", :line 49, :column 7, :end-line 49, :end-column 20, :arglists (quote ([response]))}, :name reagentest.core/error-handler, :variadic false, :file "src\\cljs\\reagentest\\core.cljs", :end-column 20, :method-params ([response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([response]))}, get-all {:protocol-inline nil, :meta {:file "d:\\workspace\\projects\\reagentest\\src\\cljs\\reagentest\\core.cljs", :line 52, :column 7, :end-line 52, :end-column 14, :arglists (quote ([]))}, :name reagentest.core/get-all, :variadic false, :file "src\\cljs\\reagentest\\core.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init-emp {:name reagentest.core/init-emp, :file "src\\cljs\\reagentest\\core.cljs", :line 26, :column 1, :end-line 26, :end-column 14, :meta {:file "d:\\workspace\\projects\\reagentest\\src\\cljs\\reagentest\\core.cljs", :line 26, :column 6, :end-line 26, :end-column 14}}, current-emp {:name reagentest.core/current-emp, :file "src\\cljs\\reagentest\\core.cljs", :line 28, :column 1, :end-line 28, :end-column 17, :meta {:file "d:\\workspace\\projects\\reagentest\\src\\cljs\\reagentest\\core.cljs", :line 28, :column 6, :end-line 28, :end-column 17}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:thead :format :tbody :key :td :value :th :tr :params :div.modal-body.form-group :type :input.form-control :table.table.table-hover.table-condensed :a.btn.btn-default.btn-sm :input#new-years.form-control :on-click :input#new-age.form-control :error-handler :div :div.modal-footer :on-change :div.btn.btn-primary :handler :p :onClick :span.glyphicon.glyphicon-remove}, :order [:input.form-control :type :value :on-change :div :div.modal-body.form-group :p :input#new-age.form-control :input#new-years.form-control :div.modal-footer :div.btn.btn-primary :on-click :handler :error-handler :params :format :a.btn.btn-default.btn-sm :table.table.table-hover.table-condensed :thead :tr :th :tbody :td :onClick :span.glyphicon.glyphicon-remove :key]}, :doc nil}